{"version":3,"sources":["Test/Test.module.scss","Header/Header.module.scss","Preloader/Preloader.module.scss","App.module.scss","serviceWorker.js","Header/Header.jsx","Redux/testReducer.js","Test/HeaderTest.jsx","Test/LikesCount.jsx","Test/Comment.jsx","Test/Replies/RepliesLikesCount.jsx","Test/Replies/Replies.jsx","Test/Replies/RepliesForReplies.jsx","Test/Test.jsx","Test/dateApi.js","Preloader/Preloader.jsx","App.js","Redux/reduxStore.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","s","headerWrapper","header","headTitle","ADD_ARTICLE","ADD_COMMENTS","initialState","articleData","commentsData","dataLoad","likeChanged","testReducer","state","action","type","article","comments","map","t","id","likes","number","commentsDataReplies","c","replies","commentsDataRepliesWithGangedLikes","i","length","push","HeaderTest","MyComponent","createDate","itemHeader","title","itemText","text","LikesCount","setNumbersOfLikes","com","onClick","likesCount","disabled","Comment","comment","commentHeader","name","date","commentText","RepliesLikesCount","comRepl","setNumberOfLikesReplies","Replies","repliesHeader","repliesText","RepliesForReplies","repRepl","repliesForRepliesHeader","Date","toLocaleString","year","month","day","hour","minute","createMarkup","__html","dangerouslySetInnerHTML","Test","changeTheNumberOfLikes","changeTheNumberOfLikesReplies","newsWrapper","itemNews","commentsWrapper","key","Math","random","Fragment","repliesForReplies","Preloader","preloader","preloadText","preloadImg","src","alt","App","this","props","getNewArticleAndComments","appWrapper","contentWrapper","Component","connect","test","dispatch","a","Promise","resolve","setTimeout","newArticle","newComments","all","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,YAAc,0BAA0B,SAAW,uBAAuB,WAAa,yBAAyB,SAAW,uBAAuB,gBAAkB,8BAA8B,SAAW,uBAAuB,QAAU,sBAAsB,cAAgB,4BAA4B,YAAc,0BAA0B,QAAU,sBAAsB,cAAgB,4BAA4B,YAAc,0BAA0B,kBAAoB,gCAAgC,wBAA0B,sCAAsC,MAAQ,oBAAoB,WAAa,yBAAyB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,qB,mBCA/sBD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,OAAS,uBAAuB,UAAY,4B,mBCA5GD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,YAAc,+BAA+B,WAAa,gC,mBCArHD,EAAOC,QAAU,CAAC,WAAa,wBAAwB,eAAiB,8B,0ICWpDC,QACU,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACxB,2D,8FCbWC,EAAS,WAErB,OACC,yBAAKC,UAAWC,IAAEC,eACjB,4BAAQF,UAAWC,IAAEE,QACpB,6BACC,wBAAIH,UAAWC,IAAEG,WAAjB,mG,4lBCVL,IAAMC,EAAc,6BACdC,EAAe,8BAMfC,EAAe,CACpBC,YAAa,GACbC,aAAc,GACdC,UAAU,EACVC,aAAa,GAoGCC,EAhGK,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCACrD,OAAQA,EAAOC,MAEd,KAAKV,EACJ,OAAO,EAAP,GAAWQ,EAAX,CAAiBL,YAAY,EAAD,GAAKM,EAAOE,WAGzC,KAAKV,EACJ,OAAO,EAAP,GAAWO,EAAX,CAAiBJ,aAAa,YAAIK,EAAOG,UAAUP,UAAU,IAG9D,IAtBuB,kCAuBtB,OAAO,EAAP,GAAWG,EAAX,CAAiBF,aAAa,IAG/B,IA5B8B,yCA6B7B,OAAO,EAAP,GACIE,EADJ,CACUJ,aAAcI,EAAMJ,aAAaS,IAAI,SAAAC,GAC7C,OAAIA,EAAEC,KAAON,EAAOM,IACnBD,EAAEE,MAAQP,EAAOQ,OACVH,GAEAA,MAKX,IAvCsC,iDAuCC,IAAD,aAGrC,IAFA,IAAII,EAAoBV,EAAMJ,aAAaS,IAAI,SAAAM,GAAC,OAAGA,EAAEC,SAAWD,EAAEC,UAC9DC,EAAmC,GAC/BC,EAAE,EAAEA,EAAEJ,EAAoBK,OAAO,EAAGD,IAC3CJ,EAAoBI,GAAGT,IAAI,SAAAC,GACtBA,EAAEC,KAAON,EAAOM,IACnBD,EAAEE,MAAQP,EAAOQ,OACjBI,EAAmCG,KAAKV,IAExCO,EAAmCG,KAAKV,KAI3C,MAAM,CAAN,OACIN,EADJ,GACaA,EAAMJ,aADnB,CACgCgB,QAAQC,EAAmCf,aAAa,KAdnD,qCAkBtC,QACC,OAAOE,I,gBC1DGiB,EAAa,SAAC,GAKnB,IAHNtB,EAGK,EAHLA,YACAuB,EAEK,EAFLA,YACAC,EACK,EADLA,WAGD,OACC,oCACC,yBAAKhC,UAAWC,IAAEgC,YAChB,8BACEzB,EAAY0B,OAEf,8BACGF,IAIJ,yBAAKhC,UAAWC,IAAEkC,UAChBJ,EAAYvB,EAAY4B,SCpBhBC,EAAa,SAAC,GAInB,IAFNC,EAEK,EAFLA,kBACAC,EACK,EADLA,IAID,OACC,6BACC,4BAAQvC,UAAWC,IAAEoB,MACjBmB,QAAS,kBACRF,EAAkBC,EAAInB,GAAImB,EAAIlB,MAAQ,KAF3C,UAKA,0BAAMrB,UAAWC,IAAEwC,YACV,2BAAIF,EAAIlB,QAEjB,4BAAQrB,UAAWC,IAAEoB,MACjBqB,SAAwB,IAAdH,EAAIlB,MACdmB,QAAS,kBACRF,EAAkBC,EAAInB,GAAImB,EAAIlB,MAAQ,KAH3C,eCfUsB,EAAU,SAAC,GAOhB,IALNZ,EAKK,EALLA,YACAQ,EAIK,EAJLA,IACAD,EAGK,EAHLA,kBACAN,EAEK,EAFLA,WAKD,OACC,yBAAKhC,UAAWC,IAAE2C,SACjB,yBAAK5C,UAAWC,IAAE4C,eACZ,0BAAM7C,UAAWC,IAAE6C,MAAnB,SAEC,2BAAIf,EAAYQ,EAAIO,QAE1B,0BAAM9C,UAAWC,IAAE8C,MACZf,GAGNO,EAAIlB,OAAS,GACb,kBAAC,EACA,CACCiB,oBACAC,SAIJ,yBAAKvC,UAAWC,IAAE+C,aAChBjB,EAAYQ,EAAIS,gBC/BRC,EAAoB,SAAC,GAI1B,IAFNC,EAEK,EAFLA,QACAC,EACK,EADLA,wBAGD,OACC,6BACC,4BAAQnD,UAAWC,IAAEoB,MACjBmB,QAAS,kBAAMW,EAAwBD,EAAQ9B,GAAI8B,EAAQ7B,MAAQ,KADvE,UAKA,0BAAMrB,UAAWC,IAAEwC,YACT,2BAAIS,EAAQ7B,QAEtB,4BAAQrB,UAAWC,IAAEoB,MACjBqB,SAA4B,IAAlBQ,EAAQ7B,MAClBmB,QAAS,kBAAMW,EAAwBD,EAAQ9B,GAAI8B,EAAQ7B,MAAQ,KAFvE,eCfU+B,EAAU,SAAC,GAMhB,IAJNrB,EAIK,EAJLA,YACAmB,EAGK,EAHLA,QACAC,EAEK,EAFLA,wBACAnB,EACK,EADLA,WAGD,OACC,oCACC,yBAAKhC,UAAWC,IAAEoD,eACjB,0BAAMrD,UAAWC,IAAE6C,MAAnB,SAEC,2BAAIf,EAAYmB,EAAQJ,QAEzB,0BAAM9C,UAAWC,IAAE8C,MACjBf,GAGDkB,EAAQ7B,OAAS,GACjB,kBAAC,EACA,CACC6B,UACAC,6BAKJ,yBAAKnD,UAAWC,IAAEqD,aAChBvB,EAAYmB,EAAQF,gBC7BZO,EAAoB,SAAC,GAK1B,IAHNxB,EAGK,EAHLA,YACAyB,EAEK,EAFLA,QACAxB,EACK,EADLA,WAID,OACC,oCACC,yBAAKhC,UAAWC,IAAEwD,yBACjB,0BAAMzD,UAAWC,IAAE6C,MAAnB,SAEC,2BAAIf,EAAYyB,EAAQV,QAEzB,0BAAM9C,UAAWC,IAAE8C,MACjBf,IAGH,yBAAKhC,UAAWC,IAAEqD,aAChBvB,EAAYyB,EAAQR,gBCVnBhB,GARU,IAAI0B,MAQQC,eAAe,KAP3B,CACfC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,YAIHC,EAAe,SAAA7B,GAAI,MAAK,CAAC8B,OAAQ9B,IAEjCL,EAAc,SAACK,GACpB,OAAO,0BACNpC,UAAWC,IAAEmC,KACb+B,wBAAyBF,EAAa7B,MAI3BgC,EAAO,SAAC,GAMb,IAJN5D,EAIK,EAJLA,YACAC,EAGK,EAHLA,aACA4D,EAEK,EAFLA,uBACAC,EACK,EADLA,8BAGKhC,EAAoB,SAAClB,EAAIC,GAAL,OAAegD,EAAuBjD,EAAIC,IAE9D8B,EAA0B,SAAC/B,EAAIC,GAAL,OAAeiD,EAA8BlD,EAAIC,IAEjF,OAEC,yBAAKrB,UAAWC,IAAEsE,aACjB,yBAAKvE,UAAWC,IAAEuE,UACjB,kBAAC,EACA,CACChE,cACAuB,cACAC,eAGDvB,EAAaS,IAAI,SAAAqB,GAAG,OACpB,yBAAKvC,UAAWC,IAAEwE,gBAAiBC,IAAKC,KAAKC,UAC5C,yBAAK5E,UAAWC,IAAEgB,UACjB,kBAAC,EACA,CACCc,cACAQ,MACAD,oBACAN,eAGF,yBAAKhC,UAAWC,IAAEwB,SAChBc,EAAId,QACFc,EAAId,QAAQP,IAAI,SAAAgC,GAAO,OACxB,kBAAC,IAAM2B,SAAP,CAAgBH,IAAKC,KAAKC,UACzB,kBAAC,EACA,CACC7C,cACAmB,UACAC,0BACAnB,eAGF,yBAAKhC,UAAWC,IAAE6E,mBAChB5B,EAAQzB,QACLyB,EAAQzB,QAAQP,IAAI,SAAAsC,GAAO,OAC5B,kBAAC,IAAMqB,SAAP,CAAgBH,IAAKC,KAAKC,UACzB,kBAAC,EACA,CACC7C,cACAyB,UACAxB,kBAKF,OAIL,WCxFExB,EAAc,CAC1BY,GAAI,EACJc,MAAO,cACPa,KAAM,WACNX,KAAK,8iBAOO3B,EAAe,CAC3B,CACCW,GAAI,EACJ4B,YAAa,qBACbF,KAAM,MACNzB,MAAO,EACPI,QAAS,CACR,CACCL,GAAI,GACJ4B,YAAa,oCACbF,KAAM,QACNzB,MAAO,GACPI,QAAS,IAEV,CACCL,GAAI,GACJ4B,YAAa,kCACbF,KAAM,QACNzB,MAAO,EACPI,QAAS,CACR,CACCL,GAAI,GACJ4B,YAAa,+BACbF,KAAM,YAMX,CACC1B,GAAI,EACJ4B,YAAa,0DACbF,KAAM,cACNzB,MAAO,EACPI,QAAS,CAAC,CAAEL,GAAI,GAAI4B,YAAa,kBAAmBF,KAAM,UAE3D,CACC1B,GAAI,EACJC,MAAO,EACP2B,YAAa,mCACbF,KAAM,Q,iBChDKiC,EAAY,WAExB,OACC,yBAAK/E,UAAWC,IAAE+E,WACjB,0BAAMhF,UAAWC,IAAEgF,aAAnB,6GAGA,yBAAKjF,UAAWC,IAAEiF,WACfC,IAAK,uBACLC,IAAI,OCCJC,E,4LAGJC,KAAKC,MAAMC,yBAAyBhF,EAAaC,K,+BAGxC,IAAD,EAQJ6E,KAAKC,MALR9E,EAHO,EAGPA,aACAD,EAJO,EAIPA,YACAE,EALO,EAKPA,SACA2D,EANO,EAMPA,uBACAC,EAPO,EAOPA,8BAGD,OAAK5D,EAKJ,yBAAKV,UAAWC,IAAEwF,YACjB,kBAAC,EAAD,MACA,yBAAKzF,UAAWC,IAAEyF,gBACjB,kBAAC,EACA,CACClF,cACAC,eACA4D,yBACAC,oCAZG,kBAAC,EAAD,U,GAjBQqB,aA4CHC,cAPc,SAAC/E,GAAD,MAAY,CACxCL,YAAaK,EAAMgF,KAAKrF,YACxBC,aAAcI,EAAMgF,KAAKpF,aACzBC,SAAUG,EAAMgF,KAAKnF,SACrBC,YAAaE,EAAMgF,KAAKlF,cAIxB,CACC6E,yBV4BsC,SAAChF,EAAYC,GACpD,6CAAO,WAAOqF,GAAP,iBAAAC,EAAA,qEACiB,IAAIC,QAAQ,SAAAC,GAClCC,WAAW,kBAAMD,EAAQzF,IAAc,OAFlC,cACF2F,EADE,gBAIkB,IAAIH,QAAQ,SAAAC,GACnCC,WAAW,kBAAMD,EAAQxF,IAAe,QALnC,cAIF2F,EAJE,gBAOAJ,QAAQK,IAAI,CAACF,EAAWC,IAPxB,wBAQAN,EA9BP,CACC/E,KAAMV,EAAaW,QA6BcmF,IAR3B,QASNL,EA3BD,CACC/E,KAAMT,EAAcW,SA0BQmF,IATtB,0CAAP,mDAAM,IU5BL/B,uBVwCoC,SAACjD,EAAGE,GACzC,OAAQ,SAACwE,GACRA,EA7B0B,GAE1B/E,KAzE8B,0CAoGD,CAACK,KAAGE,cUzCjCgD,8BV4C2C,SAAClD,EAAGE,GAChD,OAAQ,SAACwE,GACRA,EA9BiC,GAEjC/E,KA5EsC,kDAwGF,CAACK,KAAGE,YACxCwE,EA1BD,CACC/E,KA/EuB,uCUqDV6E,CAKXP,G,eCzDAiB,EAAWC,YAAgB,CAC9BV,KAAMjF,IAID4F,EAAmB7G,OAAO8G,sCAAuCC,IAMxDC,EALDC,YAAYN,EAASI,YAClCF,EACCK,YAAgBC,QCLlBC,IAASC,OACR,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAUL,MAAOA,GAClB,kBAAC,EAAD,QAGEM,SAASC,eAAe,SdkHtB,kBAAmBC,WACtBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GAClCA,EAAaC,iB","file":"static/js/main.6d665589.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsWrapper\":\"Test_newsWrapper__1E-5M\",\"itemNews\":\"Test_itemNews__2zu1-\",\"itemHeader\":\"Test_itemHeader__3yzq4\",\"itemText\":\"Test_itemText__peR-e\",\"commentsWrapper\":\"Test_commentsWrapper__3feZe\",\"comments\":\"Test_comments__1U-z_\",\"comment\":\"Test_comment__EzRRD\",\"commentHeader\":\"Test_commentHeader__1q2Ml\",\"commentText\":\"Test_commentText__lke1g\",\"replies\":\"Test_replies__Dx8S8\",\"repliesHeader\":\"Test_repliesHeader__mTi82\",\"repliesText\":\"Test_repliesText__2RAi0\",\"repliesForReplies\":\"Test_repliesForReplies__3FC9g\",\"repliesForRepliesHeader\":\"Test_repliesForRepliesHeader__17tsJ\",\"likes\":\"Test_likes__jSgRD\",\"likesCount\":\"Test_likesCount__1E8Vi\",\"text\":\"Test_text__1A7xF\",\"date\":\"Test_date__1Ddnn\",\"name\":\"Test_name__2O14f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__3i7QY\",\"header\":\"Header_header__2f1x7\",\"headTitle\":\"Header_headTitle__3y-yC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__LCi8Q\",\"preloadText\":\"Preloader_preloadText__3c6v1\",\"preloadImg\":\"Preloader_preloadImg__ucbhm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__h9RXx\",\"contentWrapper\":\"App_contentWrapper__1tFEY\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t// [::1] is the IPv6 localhost address.\r\n\twindow.location.hostname === '[::1]' ||\r\n\t// 127.0.0.1/8 is considered localhost for IPv4.\r\n\twindow.location.hostname.match(\r\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport s from './Header.module.scss'\r\n\r\n\r\n\r\nexport const Header = () => {\r\n\r\n\treturn (\r\n\t\t<div className={s.headerWrapper}>\r\n\t\t\t<header className={s.header}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2 className={s.headTitle}>\r\n\t\t\t\t\t\tТестовое задание\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\n","\r\nconst ADD_ARTICLE = '/todoReducer___ADD_ARTICLE';\r\nconst ADD_COMMENTS = '/todoReducer___ADD_COMMENTS';\r\nconst SET_THE_NUMBER_OF_LIKES = '/todoReducer___SET_THE_NUMBER_OF_LIKES';\r\nconst SET_THE_NUMBER_OF_LIKES_REPLIES = '/todoReducer___SET_THE_NUMBER_OF_LIKES_REPLIES';\r\nconst SET_CHANGE_LIKES = '/todoReducer___SET_CHANGE_LIKES';\r\n\r\n\r\nconst initialState = {\r\n\tarticleData: {},\r\n\tcommentsData: [],\r\n\tdataLoad: false,\r\n\tlikeChanged: false,\r\n\r\n};\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase ADD_ARTICLE: {\r\n\t\t\treturn {...state,articleData:{...action.article} }\r\n\t\t}\r\n\r\n\t\tcase ADD_COMMENTS: {\r\n\t\t\treturn {...state,commentsData:[...action.comments],dataLoad: true }\r\n\t\t}\r\n\r\n\t\tcase SET_CHANGE_LIKES: {\r\n\t\t\treturn {...state,likeChanged: false }\r\n\t\t}\r\n\r\n\t\tcase SET_THE_NUMBER_OF_LIKES: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,commentsData: state.commentsData.map(t => {\r\n\t\t\t\t\tif (t.id === action.id) {\r\n\t\t\t\t\t\tt.likes = action.number;\r\n\t\t\t\t\t\treturn t;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\treturn t;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_THE_NUMBER_OF_LIKES_REPLIES: {\r\n\t\t\tlet commentsDataReplies=state.commentsData.map(c=> c.replies && c.replies );\r\n\t\t\tlet commentsDataRepliesWithGangedLikes=[];\r\n\t\t\tfor(let i=0;i<commentsDataReplies.length-1; i++){\r\n\t\t\t\tcommentsDataReplies[i].map(t => {\r\n\t\t\t\t\tif (t.id === action.id) {\r\n\t\t\t\t\t\tt.likes = action.number;\r\n\t\t\t\t\t\tcommentsDataRepliesWithGangedLikes.push(t);\r\n\t\t\t\t\t}else {\r\n\t\t\t\t\t\tcommentsDataRepliesWithGangedLikes.push(t) ;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,...state.commentsData,replies:commentsDataRepliesWithGangedLikes,likeChanged: true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nconst setArticleFromAPI = (article) => (\r\n\t{\r\n\t\ttype: ADD_ARTICLE, article\r\n\t});\r\nconst setCommentsFromAPI = (comments) => (\r\n\t{\r\n\t\ttype: ADD_COMMENTS, comments\r\n\t});\r\nconst setTheNumberOfLikes = (idAndLikes) => (\r\n\t{\r\n\t\ttype: SET_THE_NUMBER_OF_LIKES,...idAndLikes\r\n\t});\r\nconst setTheNumberOfLikesReplies = (idAndLikes) => (\r\n\t{\r\n\t\ttype: SET_THE_NUMBER_OF_LIKES_REPLIES,...idAndLikes\r\n\t});\r\nconst setChangeLikes = () => (\r\n\t{\r\n\t\ttype: SET_CHANGE_LIKES\r\n\t});\r\n\r\n\r\nexport const getNewArticleAndComments = (articleData,commentsData) => {\r\n\treturn async (dispatch) => {\r\n\t\tlet newArticle = await new Promise(resolve => {\r\n\t\t\tsetTimeout(() => resolve(articleData), 1000);\r\n\t\t});\r\n\t\tlet newComments = await new Promise(resolve => {\r\n\t\t\tsetTimeout(() => resolve(commentsData), 1500);\r\n\t\t});\r\n\t\tawait Promise.all([newArticle,newComments]);\r\n\t\tawait dispatch(setArticleFromAPI(newArticle));\r\n\t\tdispatch(setCommentsFromAPI(newComments));\r\n\t}};\r\n\r\nexport const changeTheNumberOfLikes = (id,number) => {\r\n\treturn  (dispatch) => {\r\n\t\tdispatch(setTheNumberOfLikes({id,number}));\r\n\t}};\r\n\r\nexport const changeTheNumberOfLikesReplies = (id,number) => {\r\n\treturn  (dispatch) => {\r\n\t\tdispatch(setTheNumberOfLikesReplies({id,number}));\r\n\t\tdispatch(setChangeLikes());\r\n\t}};\r\n\r\nexport default testReducer;\r\n\r\n","import React from 'react'\r\nimport s from './Test.module.scss'\r\n\r\n\r\nexport const HeaderTest = (\r\n\t{\r\n\t\tarticleData,\r\n\t\tMyComponent,\r\n\t\tcreateDate\r\n\t}) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={s.itemHeader}>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{articleData.title}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t\t{createDate}\r\n\t\t\t\t\t</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.itemText}>\r\n\t\t\t\t{MyComponent(articleData.text)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n};\r\n","import React from 'react'\r\nimport s from './Test.module.scss'\r\n\r\nexport const LikesCount = (\r\n\t{\r\n\t\tsetNumbersOfLikes,\r\n\t\tcom,\r\n\t}) => {\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button className={s.likes}\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\tsetNumbersOfLikes(com.id, com.likes + 1)}>\r\n\t\t\t\tLike +\r\n\t\t\t</button>\r\n\t\t\t<span className={s.likesCount}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>{com.likes}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t<button className={s.likes}\r\n\t\t\t\t\t\t\tdisabled={com.likes === 0}\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\tsetNumbersOfLikes(com.id, com.likes - 1)}>\r\n\t\t\t\t- DisLike\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n};\r\n","import React from 'react'\r\nimport s from './Test.module.scss'\r\nimport {LikesCount} from \"./LikesCount\";\r\n\r\n\r\nexport const Comment = (\r\n\t{\r\n\t\tMyComponent,\r\n\t\tcom,\r\n\t\tsetNumbersOfLikes,\r\n\t\tcreateDate\r\n\r\n\t}) => {\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.comment}>\r\n\t\t\t<div className={s.commentHeader}>\r\n\t\t\t\t\t\t\t\t\t<span className={s.name}>\r\n\t\t\t\t\t\t\t\t\t\tName :\r\n\t\t\t\t\t\t\t\t\t\t<b>{MyComponent(com.name)}</b>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t<span className={s.date}>\r\n\t\t\t\t\t\t\t\t\t\t{createDate}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t{\r\n\t\t\t\t\tcom.likes >= 0 &&\r\n\t\t\t\t\t<LikesCount {...\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tsetNumbersOfLikes,\r\n\t\t\t\t\t\t\tcom\r\n\t\t\t\t\t\t}}/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.commentText}>\r\n\t\t\t\t{MyComponent(com.commentText)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t)\r\n};\r\n","import React from 'react'\r\nimport s from '../Test.module.scss'\r\n\r\n\r\nexport const RepliesLikesCount = (\r\n\t{\r\n\t\tcomRepl,\r\n\t\tsetNumberOfLikesReplies,\r\n\t}) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button className={s.likes}\r\n\t\t\t\t\t\t\tonClick={() => setNumberOfLikesReplies(comRepl.id, comRepl.likes + 1)\r\n\t\t\t\t\t\t\t}>\r\n\t\t\t\tLike +\r\n\t\t\t</button>\r\n\t\t\t<span className={s.likesCount}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<b>{comRepl.likes}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t<button className={s.likes}\r\n\t\t\t\t\t\t\tdisabled={comRepl.likes === 0}\r\n\t\t\t\t\t\t\tonClick={() => setNumberOfLikesReplies(comRepl.id, comRepl.likes - 1)}>\r\n\t\t\t\t- DisLike\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n};\r\n","import React from 'react'\r\nimport s from '../Test.module.scss'\r\nimport {RepliesLikesCount} from \"./RepliesLikesCount\";\r\n\r\n\r\nexport const Replies = (\r\n\t{\r\n\t\tMyComponent,\r\n\t\tcomRepl,\r\n\t\tsetNumberOfLikesReplies,\r\n\t\tcreateDate\r\n\t}) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={s.repliesHeader}>\r\n\t\t\t\t<span className={s.name}>\r\n\t\t\t\t\tName :\r\n\t\t\t\t\t<b>{MyComponent(comRepl.name)}</b>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span className={s.date}>\r\n\t\t\t\t\t{createDate}\r\n\t\t\t\t</span>\r\n\t\t\t\t{\r\n\t\t\t\t\tcomRepl.likes >= 0 &&\r\n\t\t\t\t\t<RepliesLikesCount {...\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcomRepl,\r\n\t\t\t\t\t\t\tsetNumberOfLikesReplies\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.repliesText}>\r\n\t\t\t\t{MyComponent(comRepl.commentText)}\r\n\t\t\t</div>\r\n\t\t</>)\r\n};\r\n","import React from 'react'\r\nimport s from '../Test.module.scss'\r\n\r\n\r\n\r\nexport const RepliesForReplies = (\r\n\t{\r\n\t\tMyComponent,\r\n\t\trepRepl,\r\n\t\tcreateDate,\r\n\t}) => {\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={s.repliesForRepliesHeader}>\r\n\t\t\t\t<span className={s.name}>\r\n\t\t\t\t\tName :\r\n\t\t\t\t\t<b>{MyComponent(repRepl.name)}</b>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span className={s.date}>\r\n\t\t\t\t\t{createDate}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.repliesText}>\r\n\t\t\t\t{MyComponent(repRepl.commentText)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n};\r\n","import React from 'react'\r\nimport s from './Test.module.scss'\r\nimport {HeaderTest} from \"./HeaderTest\";\r\nimport {Comment} from \"./Comment\";\r\nimport {Replies} from \"./Replies/Replies\";\r\nimport {RepliesForReplies} from \"./Replies/RepliesForReplies\";\r\n\r\nconst newDate = new Date();\r\nconst options = {\r\n\tyear: 'numeric',\r\n\tmonth: 'long',\r\n\tday: 'numeric',\r\n\thour: 'numeric',\r\n\tminute: 'numeric'\r\n};\r\nconst createDate = (newDate.toLocaleString(\"ru\", options));\r\n\r\nconst createMarkup = text => ({__html: text});\r\n\r\nconst MyComponent = (text) => {\r\n\treturn <span\r\n\t\tclassName={s.text}\r\n\t\tdangerouslySetInnerHTML={createMarkup(text)}/>;\r\n};\r\n\r\n\r\nexport const Test = (\r\n\t{\r\n\t\tarticleData,\r\n\t\tcommentsData,\r\n\t\tchangeTheNumberOfLikes,\r\n\t\tchangeTheNumberOfLikesReplies\r\n\t}) => {\r\n\r\n\tconst setNumbersOfLikes = (id, likes) => changeTheNumberOfLikes(id, likes);\r\n\r\n\tconst setNumberOfLikesReplies = (id, likes) => changeTheNumberOfLikesReplies(id, likes);\r\n\r\n\treturn (\r\n\r\n\t\t<div className={s.newsWrapper}>\r\n\t\t\t<div className={s.itemNews}>\r\n\t\t\t\t<HeaderTest {...\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tarticleData,\r\n\t\t\t\t\t\tMyComponent,\r\n\t\t\t\t\t\tcreateDate\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{commentsData.map(com =>\r\n\t\t\t\t\t<div className={s.commentsWrapper} key={Math.random()}>\r\n\t\t\t\t\t\t<div className={s.comments}>\r\n\t\t\t\t\t\t\t<Comment {...\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tMyComponent,\r\n\t\t\t\t\t\t\t\t\tcom,\r\n\t\t\t\t\t\t\t\t\tsetNumbersOfLikes,\r\n\t\t\t\t\t\t\t\t\tcreateDate\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className={s.replies}>\r\n\t\t\t\t\t\t\t\t{com.replies\r\n\t\t\t\t\t\t\t\t\t? com.replies.map(comRepl =>\r\n\t\t\t\t\t\t\t\t\t\t<React.Fragment key={Math.random()}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Replies {...\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMyComponent,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomRepl,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetNumberOfLikesReplies,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcreateDate\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={s.repliesForReplies}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{comRepl.replies\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? comRepl.replies.map(repRepl =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment key={Math.random()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RepliesForReplies {...\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMyComponent,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trepRepl,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcreateDate,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>)\r\n\t\t\t\t\t\t\t\t\t: ''}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n","\r\nexport const articleData = {\r\n\tid: 1,\r\n\ttitle: 'Hello world',\r\n\tdate: 1568620630, // UNIX timestamp\r\n\ttext: `\r\n  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s</p>\r\n  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s</p>\r\n  <img src=\"https://via.placeholder.com/150\" alt=\"Image\" />\r\n  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s</p>\r\n  `,\r\n};\r\nexport const commentsData = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tcommentText: '<p>Hello World</p>',\r\n\t\tname: 'Bob',\r\n\t\tlikes: 5,\r\n\t\treplies: [\r\n\t\t\t{\r\n\t\t\t\tid: 10,\r\n\t\t\t\tcommentText: '<p>Can you write smth better?</p>',\r\n\t\t\t\tname: 'Emily',\r\n\t\t\t\tlikes: 10,\r\n\t\t\t\treplies: [],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 11,\r\n\t\t\t\tcommentText: '<p>Where does it come from?</p>',\r\n\t\t\t\tname: 'Emily',\r\n\t\t\t\tlikes: 0,\r\n\t\t\t\treplies: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 11,\r\n\t\t\t\t\t\tcommentText: '<p>Where can I get some?</p>',\r\n\t\t\t\t\t\tname: 'Carl',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tcommentText: '<p>Hello <strong>World</strong>! How are you today?</p>',\r\n\t\tname: 'John Random',\r\n\t\tlikes: 3,\r\n\t\treplies: [{ id: 55, commentText: \"<p>I'm fine</p>\", name: 'Matt' }],\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tlikes: 1,\r\n\t\tcommentText: '<p>Lerem Ipsum.... <i>Hi</i></p>',\r\n\t\tname: 'Bob',\r\n\t},\r\n];","import React from 'react';\r\nimport s from './Preloader.module.scss';\r\n\r\n\r\nexport const Preloader = () => {\r\n\r\n\treturn (\r\n\t\t<div className={s.preloader}>\r\n\t\t\t<span className={s.preloadText}>\r\n\t\t\t\tЗагружаем...ожидайте\r\n\t\t\t</span>\r\n\t\t\t<img className={s.preloadImg}\r\n\t\t\t\t\t src={'/images/settings.ico'}\r\n\t\t\t\t\t alt=\"\"\r\n\t\t\t/>\r\n\t\t</div>)\r\n};","import React, {Component} from 'react';\r\nimport s from './App.module.scss';\r\nimport {Header} from \"./Header/Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n\tchangeTheNumberOfLikes,\r\n\tchangeTheNumberOfLikesReplies,\r\n\tgetNewArticleAndComments\r\n} from \"./Redux/testReducer\";\r\nimport {Test} from \"./Test/Test\";\r\nimport {articleData, commentsData} from \"./Test/dateApi\";\r\nimport {Preloader} from \"./Preloader/Preloader\";\r\n\r\n\r\nclass App extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getNewArticleAndComments(articleData, commentsData);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst {\r\n\t\t\tcommentsData,\r\n\t\t\tarticleData,\r\n\t\t\tdataLoad,\r\n\t\t\tchangeTheNumberOfLikes,\r\n\t\t\tchangeTheNumberOfLikesReplies\r\n\t\t} = this.props;\r\n\r\n\t\tif (!dataLoad) {\r\n\t\t\treturn <Preloader/>\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={s.appWrapper}>\r\n\t\t\t\t<Header/>\r\n\t\t\t\t<div className={s.contentWrapper}>\r\n\t\t\t\t\t<Test {...\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tarticleData,\r\n\t\t\t\t\t\t\tcommentsData,\r\n\t\t\t\t\t\t\tchangeTheNumberOfLikes,\r\n\t\t\t\t\t\t\tchangeTheNumberOfLikesReplies\r\n\t\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport let mapStateToProps = (state) => ({\r\n\tarticleData: state.test.articleData,\r\n\tcommentsData: state.test.commentsData,\r\n\tdataLoad: state.test.dataLoad,\r\n\tlikeChanged: state.test.likeChanged,\r\n});\r\n\r\nexport default connect(mapStateToProps,\r\n\t{\r\n\t\tgetNewArticleAndComments,\r\n\t\tchangeTheNumberOfLikes,\r\n\t\tchangeTheNumberOfLikesReplies\r\n\t})(App);\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport testReducer from \"./testReducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n\ttest: testReducer,\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__|| compose;\r\nconst store = createStore(reducers,compose(\r\n\tcomposeEnhancers(\r\n\t\tapplyMiddleware(thunkMiddleware)\r\n\t)));\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from \"./Redux/reduxStore\";\r\n\r\nReactDOM.render(\r\n\t<HashRouter>\r\n\t\t<Provider store={store}>\r\n\t<App />\r\n\t\t</Provider>\r\n\t</HashRouter>\r\n\t, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}